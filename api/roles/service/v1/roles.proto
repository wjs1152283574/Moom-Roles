syntax = "proto3";

package api.roles.service.v1;
import "google/api/annotations.proto";

option go_package = "github.com/it-moom/moom-roles/api/roles/service/v1;v1";
option java_multiple_files = true;
option java_package = "api.roles.service.v1";

service Roles {
    // 生成超级用户
	rpc CreateSuperUser (CreateSuperUserRequest) returns (CreateSuperUserResponse){
        option (google.api.http) = {
            get: "/v1/auth/role/superuser/create",
        };
    };

    // 获取图片验证码
    rpc GetCaptcha (GetCaptchaRequest) returns (GetCaptchaResponse){
        option (google.api.http) = {
            get: "/v1/role/captcha",
        };
    };
    
    // 后台登陆
    rpc Login (LoginRequest) returns (LoginResponse){
        option (google.api.http) = {
            post: "/v1/role/login",
            body: "*"
        };
    };

    // **********  超级管理员功能  ************ 
    // 创建后台用户
    rpc CreateAdminUser (CreateAdminUserRequest) returns (CreateAdminUserResponse){
        option (google.api.http) = {
            post: "/v1/role/user/create",
            body: "*"
        };
    };
    // 后台用户列表
    rpc AdminUserList (AdminUserListRequest) returns (AdminUserListResponse){
        option (google.api.http) = {
            post: "/v1/role/user/list",
            body: "*"
        };
    };
    // 后台用户详细
    rpc AdminUserInfos (AdminUserInfosRequest) returns (AdminUserInfosResponse){
        option (google.api.http) = {
            post: "/v1/role/user/details",
            body: "*"
        };
    };
    // 编辑后台用户基本信息(用户名/密码/头像)
    rpc AdminUserEdit (AdminUserEditRequest) returns (AdminUserEditResponse){
        option (google.api.http) = {
            post: "/v1/role/user/update",
            body: "*"
        };
    };
    // 用户分配角色
    rpc SetRoles (SetRolesRequest) returns (SetRolesResponse){
        option (google.api.http) = {
            post: "/v1/role/user/setroles",
            body: "*"
        };
    };
    // 用户分配权限
    rpc SetPermission (SetPermissionRequest) returns (SetPermissionResponse){
        option (google.api.http) = {
            post: "/v1/role/user/setpermissions",
            body: "*"
        };
    };
    // 删除后台用户
    rpc AdminUserDelete (AdminUserDeleteRequest) returns (AdminUserDeleteResponse){
        option (google.api.http) = {
            delete: "/v1/role/user/delete"
        };
    };
    // 创建角色
    rpc RoleCreate (RoleCreateRequest) returns (RoleCreateResponse){
        option (google.api.http) = {
            post: "/v1/role/create",
            body: "*"
        };
    };
    // 角色列表
    rpc RoleList (RoleListRequest) returns (RoleListResponse){
        option (google.api.http) = {
            post: "/v1/role/list",
            body: "*"
        };
    };
    // 删除角色
    rpc RoleDelete (RoleDeleteRequest) returns (RoleDeleteResponse){
        option (google.api.http) = {
            post: "/v1/role/delete",
            body: "*"
        };
    };
    // 编辑角色
    rpc RoleEdit (RoleEditRequest) returns (RoleEditResponse){
        option (google.api.http) = {
            post: "/v1/role/update",
            body: "*"
        };
    };
    // 创建权限
    rpc PermissionCreate (PermissionCreateRequest) returns (PermissionCreateResponse){
        option (google.api.http) = {
            post: "/v1/role/permission/create",
            body: "*"
        };
    };
    // 权限列表
    rpc PermissionList (PermissionListRequest) returns (PermissionListResponse){
        option (google.api.http) = {
            post: "/v1/role/permission/list",
            body: "*"
        };
    };
    // 权限删除
    rpc PermissionDelete (PermissionDeleteRequest) returns (PermissionDeleteResponse){
        option (google.api.http) = {
            post: "/v1/role/permission/delete",
            body: "*"
        };
    };
    // 更新权限
    rpc PermissionEdit (PermissionEditRequest) returns (PermissionEditResponse){
        option (google.api.http) = {
            post: "/v1/role/permission/update",
            body: "*"
        };
    };
    // 创建路由
    rpc RouteCreate (RouteCreateRequest) returns (RouteCreateResponse){
        option (google.api.http) = {
            post: "/v1/role/route/create",
            body: "*"
        };
    };
    // 路由列表
    rpc RouteList (RouteListRequest) returns (RouteListResponse){
        option (google.api.http) = {
            post: "/v1/role/route/list",
            body: "*"
        };
    };
    // 路由编辑
    rpc RouteEdit (RouteEditRequest) returns (RouteEditResponse){
        option (google.api.http) = {
            post: "/v1/role/route/edit",
            body: "*"
        };
    };
    // 路由删除
    rpc RouteDelete (RouteDeleteRequest) returns (RouteDeleteResponse){
        option (google.api.http) = {
            post: "/v1/role/route/delete",
            body: "*"
        };
    };
    // 路由绑定角色
    rpc RouteRole (RouteRoleRequest) returns (RouteRoleResponse){
        option (google.api.http) = {
            post: "/v1/role/route/setrole",
            body: "*"
        };
    };
    // 路由绑定角色-解除
    rpc RouteRoleDelete (RouteRoleDeleteRequest) returns (RouteRoleDeleteResponse){
        option (google.api.http) = {
            post: "/v1/role/route/unsetrole",
            body: "*"
        };
    };
    // 路由绑定权限
    rpc RoutePermission (RoutePermissionRequest) returns (RoutePermissionResponse){
        option (google.api.http) = {
            post: "/v1/role/route/setpermission",
            body: "*"
        };
    };
    // 路由绑定权限-解除
    rpc RoutePermissionDelete (RoutePermissionDeleteRequest) returns (RoutePermissionDeleteResponse){
        option (google.api.http) = {
            post: "/v1/role/route/unsetpermission",
            body: "*"
        };
    };

    // *******  你的系统鉴权RPC接口  **********
    // 验证用户角色
    rpc CheckRole (CheckRoleRequest) returns (CheckRoleResponse);
    // 验证用户权限
    rpc CheckPermission (CheckPermissionRequest) returns (CheckPermissionResponse);
    // 验证路由可访问角色--token
    rpc CheckRouteRoleByToken (CheckRouteRoleByTokenRequest) returns (CheckRouteRoleByTokenResponse);
    // 验证路由可访问角色--id
    rpc CheckRouteRoleByID (CheckRouteRoleByIDRequest) returns (CheckRouteRoleByIDResponse);
    // 验证路由可访问权限--token
    rpc CheckRoutePermissionByToken (CheckRoutePermissionByTokenRequest) returns (CheckRoutePermissionByTokenResponse);
    // 验证路由可访问权限--id
    rpc CheckRoutePermissionByID (CheckRoutePermissionByIDRequest) returns (CheckRoutePermissionByIDResponse);
}

message RoutePermissionDeleteRequest {
    // 路由ID 
    int64 id = 1;
    // 权限ID列表
    repeated int64 permission = 2;
}
message RoutePermissionDeleteResponse {}

message RouteRoleDeleteRequest {
    // 路由ID 
    int64 id = 1;
    // 角色ID列表
    repeated int64 route = 2;
}
message RouteRoleDeleteResponse {}

message RouteDeleteRequest {
    // 路由ID 
    int64 id = 1;
}
message RouteDeleteResponse {}

message RouteEditRequest {
    // 路由ID 
    int64 id = 1;
    // URL
    string url = 2;
    // 方法
    int64 method = 3;
}
message RouteEditResponse {}

message RouteListRequest {
    // 页数
    int64 page = 1;
    // 每页数量
    int64 limit = 2;
    // 创建者用户名 （模糊查询）
    string cname = 3;
    // 用户名（模糊查询）
    string name = 4;
}

message RouteListResponse {
    message RouteListItem {
        // ID 
        int64 id = 1;
        // URL
        string url = 2;
        // 方法
        int64 method = 3;
        // 创建者ID
        int64 cid = 4;
        // 创建者用户名
        string name = 5;
        // 创建时间 
        int64 ctime = 6;
    }
    // 总数
    int64 total = 1;
    // 列表
    repeated RouteListItem list = 2;
}


message CheckRoutePermissionByIDRequest {
    // 管理员ID
    int64 id = 1;
    // 角色代码
    string code = 2;
}
message CheckRoutePermissionByIDResponse {
    bool result = 1;
}

message CheckRoutePermissionByTokenRequest {
     // 登陆Token (使用者检测路由的角色时未必有管理员ID，可以直接传token进行检测)
     string token = 1;
     // 角色代码
     string code = 2;
}
message CheckRoutePermissionByTokenResponse {
    bool result = 1;
}

message CheckRouteRoleByIDRequest {
    // 管理员ID
    int64 id = 1;
    // 角色代码
    string code = 2;
}
message CheckRouteRoleByIDResponse {
    bool result = 1;
}

message CheckRouteRoleByTokenRequest {
    // 登陆Token (使用者检测路由的角色时未必有管理员ID，可以直接传token进行检测)
    string token = 1;
    // 角色代码
    string code = 2;
}
message CheckRouteRoleByTokenResponse {
    bool result = 1;
}

message RoutePermissionRequest {
     // 路由ID
    int64 route = 1; 
    // 权限ID列表
    repeated int64 permisson = 2;
}
message RoutePermissionResponse {

}

message RouteRoleRequest {
    // 路由ID
    int64 route = 1;
    // 角色ID列表
    repeated int64 role = 2;
}
message RouteRoleResponse {

}

message RouteCreateRequest {
    // URL 
    string url = 1;
    // 对应路由方法：1-get 2-post 3-put 4-delete ...
    int64 method = 2;
}
message RouteCreateResponse {

}

message CreateAdminUserRequest {
    // 用户名
    string name = 1;
    // 密码
    string pass = 2;
    // 头像RUL
    string icon = 3;
}
message CreateAdminUserResponse {
    
}

message AdminUserListRequest {
    // 页数
    int64 page = 1;
    // 每页数量
    int64 limit = 2;
    // 创建者用户名 （模糊查询）
    string cname = 3;
    // 用户名（模糊查询）
    string name = 4;
    // 类型 1-普通管理员 2-超级管理员
    repeated int64 type = 5;
    // 状态 1-正常 2-冻结
    repeated int64 status = 6;
}
message AdminUserListResponse {
    message List {
        // ID
        int64 id = 1;
        // 创建者ID
        int64 cid = 2;
        // 创建者用户名
        string cname = 3;
        // 创建时间（秒级时间戳）
        int64 ctime = 4;
        // 用户名
        string name = 5;
        // 加密密码
        string pass = 6;
        // 类型 1-普通管理员 2-超级管理员
        int64 type = 7;
        // 状态 1-正常 2-冻结
        int64 status = 8;
        // 头像
        string icon = 9;
    }
    // 总数
    int64 total = 1;
    // 列表
    repeated List list = 2;
}

message AdminUserInfosRequest {

}

message Permissions {
    // ID 
    int64 id = 1;
    // 代码
    string code = 2;
}
message Role {
    // ID 
    int64 id = 1;
    // 代码
    string code = 2;
}

message AdminUserInfosResponse {
    // ID 
    int64 id = 1;
    // 用户名
    string name = 2;
    // 头像
    string icon = 3;
    // 拥有的权限
    repeated Permissions permossions = 4;
    // 拥有的角色
    repeated Role roles = 5;
}

message AdminUserEditRequest {
    // 用户名 
    string name = 1;
    // 密码 
    string pass = 2;
    // 头像
    string icon = 3;
    // 用户ID
    int64 uid = 4;
}
message AdminUserEditResponse {

}

message AdminUserDeleteRequest {
    // 用户ID
    int64 id = 1;
}
message AdminUserDeleteResponse {

}

message SetRolesRequest {
    // 用户ID
    int64 uid = 1;
    // 角色ID 列表
    repeated int64 rid = 2;
}
message SetRolesResponse {

}

message SetPermissionRequest {
    // 用户ID
    int64 uid = 1;
    // 权限ID 列表
    repeated int64 pid = 2;
}
message SetPermissionResponse {

}

message RoleCreateRequest {
    // 角色名称
    string name = 1;
    // 代码
    string code =2;
}
message RoleCreateResponse {

}

message RoleListRequest {
    // 页数
    int64 page = 1;
    // 每页数量
    int64 limit = 2;
    // 名称 （模糊查询）
    string name = 3;
    // 代码 （模糊查询）
    string code = 4;
}
message RoleListResponse {
    message RoleListItem {
        // ID
        int64 id = 1;
        // 名称 
        string name = 2;
        // 代码 
        string code = 3;
        // 创建者ID
        int64 cid = 4;
        // 创建者名称
        string cname = 5;
        // 创建时间
        int64 ctime = 6;
        // 更新时间
        int64 utime = 7;
    }
    // 列表
    repeated RoleListItem list = 1;
    // 总数
    int64 total = 2;
}

message RoleDeleteRequest {
    // 角色ID
    int64 id = 1;
}
message RoleDeleteResponse {

}

message RoleEditRequest {
    // 角色ID
    int64 id = 1;
    // 角色名称
    string name = 2;
    // 角色代码
    string code = 3;
}
message RoleEditResponse {
    
}

message PermissionCreateRequest {
    // 权限名称
    string name = 1;
    // 代码
    string code =2;
}
message PermissionCreateResponse {

}

message PermissionListRequest {
    // 页数
    int64 page = 1;
    // 每页数量
    int64 limit = 2;
    // 名称 （模糊查询）
    string name = 3;
    // 代码 （模糊查询）
    string code = 4;
}
message PermissionListResponse {
    message PermissionListItem {
        // ID
        int64 id = 1;
        // 名称 
        string name = 2;
        // 代码 
        string code = 3;
        // 创建者ID
        int64 cid = 4;
        // 创建者名称
        string cname = 5;
        // 创建时间
        int64 ctime = 6;
        // 更新时间
        int64 utime = 7;
    }
    // 列表
    repeated PermissionListItem list = 1;
    // 总数
    int64 total = 2;
}

message PermissionDeleteRequest {
    // 权限ID
    int64 id = 1;
}
message PermissionDeleteResponse {

}

message PermissionEditRequest {
    // 角色ID
    int64 id = 1;
    // 角色名称
    string name = 2;
    // 角色代码
    string code = 3;
}
message PermissionEditResponse {

}

message CheckRoleRequest {
    // 管理员ID
    int64 id = 1;
    // 角色代码（调用者使用更有语意化的字符串来表示而非数值）
    string code = 2;
}
message CheckRoleResponse {
    bool result  = 1;
}

message CheckPermissionRequest {
    // 管理员ID
    int64 id = 1;
    // 权限代码
    string code = 2;
}
message CheckPermissionResponse {
    bool result  = 1;
}

message CreateSuperUserRequest {}
message CreateSuperUserResponse {}

message GetCaptchaRequest{}
message GetCaptchaResponse{
    // 验证码对应的key
    string key = 1;
    // base64 验证码
    string verify = 2;
}

message LoginRequest{
    // 验证码对应的key
    string key = 1;
    // 验证码值
    string val = 2;
    // 用户名
    string name = 3;
    // 密码
    string pass = 4;
}
message LoginResponse {
    // token 
    string token = 1;
}


